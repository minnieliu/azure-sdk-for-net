// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.Administration.Models
{
    public partial class AcquiredPhoneNumber
    {
        internal static AcquiredPhoneNumber DeserializeAcquiredPhoneNumber(JsonElement element)
        {
            string id = default;
            string phoneNumber = default;
            string countryCode = default;
            PhoneNumberType numberType = default;
            AssignmentType assignmentType = default;
            DateTimeOffset purchaseDate = default;
            PhoneNumberCapabilities capabilities = default;
            string callbackUrl = default;
            string applicationId = default;
            MonthlyRate monthlyRate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("phoneNumber"))
                {
                    phoneNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countryCode"))
                {
                    countryCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("numberType"))
                {
                    numberType = new PhoneNumberType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("assignmentType"))
                {
                    assignmentType = new AssignmentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("purchaseDate"))
                {
                    purchaseDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("capabilities"))
                {
                    capabilities = PhoneNumberCapabilities.DeserializePhoneNumberCapabilities(property.Value);
                    continue;
                }
                if (property.NameEquals("callbackUrl"))
                {
                    callbackUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("applicationId"))
                {
                    applicationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("monthlyRate"))
                {
                    monthlyRate = MonthlyRate.DeserializeMonthlyRate(property.Value);
                    continue;
                }
            }
            return new AcquiredPhoneNumber(id, phoneNumber, countryCode, numberType, assignmentType, purchaseDate, capabilities, callbackUrl, applicationId, monthlyRate);
        }
    }
}
