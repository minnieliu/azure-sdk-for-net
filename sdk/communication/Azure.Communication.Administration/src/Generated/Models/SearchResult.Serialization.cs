// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.Administration.Models
{
    public partial class SearchResult
    {
        internal static SearchResult DeserializeSearchResult(JsonElement element)
        {
            Optional<string> id = default;
            Optional<IReadOnlyList<string>> phoneNumbers = default;
            Optional<PhoneNumberType> numberType = default;
            Optional<AssignmentType> assignmentType = default;
            Optional<Capabilities> capabilities = default;
            Optional<MonthlyRate> monthlyRate = default;
            Optional<DateTimeOffset> searchExpiresBy = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("phoneNumbers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    phoneNumbers = array;
                    continue;
                }
                if (property.NameEquals("numberType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numberType = new PhoneNumberType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("assignmentType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    assignmentType = new AssignmentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("capabilities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    capabilities = Capabilities.DeserializeCapabilities(property.Value);
                    continue;
                }
                if (property.NameEquals("monthlyRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    monthlyRate = MonthlyRate.DeserializeMonthlyRate(property.Value);
                    continue;
                }
                if (property.NameEquals("searchExpiresBy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    searchExpiresBy = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new SearchResult(id.Value, Optional.ToList(phoneNumbers), Optional.ToNullable(numberType), Optional.ToNullable(assignmentType), capabilities.Value, monthlyRate.Value, Optional.ToNullable(searchExpiresBy));
        }
    }
}
