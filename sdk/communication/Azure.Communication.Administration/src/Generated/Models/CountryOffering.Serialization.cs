// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.Administration.Models
{
    public partial class CountryOffering
    {
        internal static CountryOffering DeserializeCountryOffering(JsonElement element)
        {
            Optional<PhoneNumberType> numberType = default;
            Optional<AssignmentType> assignmentType = default;
            Optional<string> countryCode = default;
            Optional<AvailableCapabilities> availableCapabilities = default;
            Optional<MonthlyRate> monthlyRate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("numberType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numberType = new PhoneNumberType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("assignmentType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    assignmentType = new AssignmentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("countryCode"))
                {
                    countryCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("availableCapabilities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    availableCapabilities = AvailableCapabilities.DeserializeAvailableCapabilities(property.Value);
                    continue;
                }
                if (property.NameEquals("monthlyRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    monthlyRate = MonthlyRate.DeserializeMonthlyRate(property.Value);
                    continue;
                }
            }
            return new CountryOffering(Optional.ToNullable(numberType), Optional.ToNullable(assignmentType), countryCode.Value, availableCapabilities.Value, monthlyRate.Value);
        }
    }
}
